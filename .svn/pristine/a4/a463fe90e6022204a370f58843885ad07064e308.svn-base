using System;
using System.Collections.Generic;
using System.Data;
using HRFA.ATT;
using HRFA.COMMON;
using Oracle.DataAccess.Client;
using System.Configuration;

namespace HRFA.DataLayer
{
    public class DLLBudgetApprove
    {
        public string SaveBudgetApprove(ATTBudgetApprove objBudgetApprove, string appID, string modID, string date)
        {
            string msg = "";
            Int64? subNo = null;
            string sp = "";
            bool flag = false;

            if (objBudgetApprove.Action == "A")
            {
                sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_ADD_APPROVED_BUDGET";
                msg = " Successfully Save !!!";
            }
            else if (objBudgetApprove.Action == "E")
            {
                sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_EDIT_APPROVED_BUDGET";
                msg = " Successfully Update !!!";
            }

            GetConnection conn = new GetConnection();
            OracleConnection dbConn = conn.GetDbConn(conn.LoginUser);
            OracleTransaction tran = dbConn.BeginTransaction();

            try
            {
                foreach (ATTBudgetApprove obj in objBudgetApprove.BudgetApprove)
                {
                  

                    if (sp != "")
                    {
                        List<OracleParameter> paramList = new List<OracleParameter>();
                        paramList.Add(SqlHelper.GetOraParam(":p_SUBMISSION_NO", objBudgetApprove.SubmissionNo, OracleDbType.Int64, ParameterDirection.InputOutput));
                        paramList.Add(SqlHelper.GetOraParam(":p_OFFICE_CD", objBudgetApprove.Office.OfficeCode, OracleDbType.Int32, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_COSTCENTER_ID", objBudgetApprove.CostCenter.CostCenterID, OracleDbType.Int64, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_REQUEST_DATE", obj.RequestDate, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_BI_ID", obj.BudgetItem.BudgetItemID, OracleDbType.Int64, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_JOB_ID", "1", OracleDbType.Int32, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_APPROVED_DATE", date, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_AMOUNT", obj.ApproveAmount, OracleDbType.Double, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_FROM_DATE", obj.FromDate, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_TO_DATE", obj.ToDate, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_R_STATUS", obj.Status, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_ENTRY_BY", obj.EntryBy, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_ENTRY_DATE", obj.EntryDate, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_REMARKS", obj.Remarks, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_FISCAL_YR", objBudgetApprove.FiscalYear.FiscalYearName, OracleDbType.Varchar2, ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_INCOME_TYPE", objBudgetApprove.IncomeType.IncomeTypeName, OracleDbType.Varchar2, ParameterDirection.Input));

                        paramList.Add(SqlHelper.GetOraParam(":p_SQ_NO", objBudgetApprove.SeqNo, OracleDbType.Varchar2, ParameterDirection.Input));



                        paramList[0].Size = 20;


                        SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, sp, paramList.ToArray());
                        objBudgetApprove.SubmissionNo = Int64.Parse(paramList[0].Value.ToString());
                        
                        paramList.Clear();

                    }
                    else
                    {
                        msg = "Error in Saving.";
                        throw new Exception(msg);
                    }
                    if (obj.OldSubmissionNo != null && flag==false)
                    {
                        DLLUserTranVerification dllUTV = new DLLUserTranVerification();
                        dllUTV.SaveVerifyLog(tran, obj.EntryBy, obj.OldSubmissionNo, subNo, appID, modID);
                        flag = true;
                    }
                }
                tran.Commit();
            }
            catch (Exception ex)
            {
                msg = "Error in Saving.";
                tran.Rollback();
                throw (ex);
            }
            finally
            {
                conn.CloseDbConn();
            }
            // return msg;
            return msg + "</br> Please Note Your Submission No.</br><b>" + objBudgetApprove.SubmissionNo + "</b>";
        }
        public List<ATTBudgetApprove> GetBudgetApproveBySubNo(Int64? SubNo)
        {
            string SP = "";
            GetConnection getConn = new GetConnection();
            OracleConnection conn = getConn.GetDbConn(getConn.LoginUser);

            try
            {
                SP = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_GET_APPROVED_BUDGET";
                List<OracleParameter> paramList = new List<OracleParameter>();
                paramList.Add(SqlHelper.GetOraParam(":P_SUBMISSION_NO", SubNo, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_RC", null, OracleDbType.RefCursor, System.Data.ParameterDirection.Output));
                paramList[0].Size = 20;
                DataSet ds = SqlHelper.ExecuteDataset(conn, CommandType.StoredProcedure, SP, paramList.ToArray());
                List<ATTBudgetApprove> lstATT = new List<ATTBudgetApprove>();

                foreach (DataRow drow in ((DataTable)ds.Tables[0]).Rows)
                {
                    ATTBudgetApprove objATT = new ATTBudgetApprove();


                    objATT.CostCenter = new ATTCostCenter();
                    objATT.Office = new ATTOffice();

                    objATT.Job = new ATTJob();
                    objATT.BudgetItem = new ATTBudgetItem();
                    objATT.IncomeType = new ATTIncomeType();
                    
                    objATT.SubmissionNo = string.IsNullOrEmpty(drow["SUBMISSION_NO"].ToString()) ? (Int64?)null : Int64.Parse(drow["SUBMISSION_NO"].ToString());
                    objATT.Office.OfficeCode = string.IsNullOrEmpty(drow["OFFICE_CD"].ToString()) ? (Int32?)null : Int32.Parse(drow["OFFICE_CD"].ToString());
                    objATT.Office.OfficeNameNep = drow["OFFICE_NAME_NEPALI"].ToString();
                    objATT.CostCenter.CostCenterID = string.IsNullOrEmpty(drow["COSTCENTER_ID"].ToString()) ? (Int64?)null : Int64.Parse(drow["COSTCENTER_ID"].ToString());
                    objATT.CostCenter.CostCenterName = drow["COSTCENTER_NAME"].ToString();
                    objATT.Job.JobID = string.IsNullOrEmpty(drow["JOB_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["JOB_ID"].ToString());

                    objATT.ReqAmount = string.IsNullOrEmpty(drow["REQ_AMOUNT"].ToString()) ? (double?)null : double.Parse(drow["REQ_AMOUNT"].ToString());
                    objATT.ApproveAmount = string.IsNullOrEmpty(drow["AMOUNT"].ToString()) ? (double?)null : double.Parse(drow["AMOUNT"].ToString());
                    objATT.RequestDate = drow["REQUEST_DATE"].ToString();
                    objATT.ApproveDate = drow["APPROVED_DATE"].ToString();
                    objATT.FiscalYear.FiscalYearName = drow["FISCAL_YR"].ToString();
                    objATT.AccountChart.AccCode = string.IsNullOrEmpty(drow["BI_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["BI_ID"].ToString());
                    objATT.AccountChart.AccName = drow["BI_DESC"].ToString();
                    objATT.AccountChart.CodeNo = drow["CODE_NO"].ToString();
                    objATT.IncomeType.IncomeTypeName = drow["INCOME_TYPE"].ToString();
                    objATT.SeqNo = string.IsNullOrEmpty(drow["SEQ_NO"].ToString()) ? (Int32?)null : Int32.Parse(drow["SEQ_NO"].ToString());
                   
                    lstATT.Add(objATT);
                }
                paramList.Clear();
                return lstATT;


            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                getConn.CloseDbConn();
            }


        }
        public List<ATTBudgetApprove> GetDetails(Int32? OfficeCD, Int32? CostCenterID, string fiscalyear, string incomeType)
        {
            string SP = "";
            GetConnection getConn = new GetConnection();
            OracleConnection conn = getConn.GetDbConn(getConn.LoginUser);

            try
            {
                SP = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_GET_BUDGET_REQUEST";
                List<OracleParameter> paramList = new List<OracleParameter>();
                paramList.Add(SqlHelper.GetOraParam(":P_OFFICE_CD", OfficeCD, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_COSTCENTER_ID", CostCenterID, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_FISCAL_YR", fiscalyear, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_Income_Type", incomeType, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_RC", null, OracleDbType.RefCursor, System.Data.ParameterDirection.Output));
                paramList[0].Size = 20;
                DataSet ds = SqlHelper.ExecuteDataset(conn, CommandType.StoredProcedure, SP, paramList.ToArray());
                List<ATTBudgetApprove> lstATT = new List<ATTBudgetApprove>();
               
                foreach (DataRow drow in ((DataTable)ds.Tables[0]).Rows)
                {
                    ATTBudgetApprove objATT = new ATTBudgetApprove();
                    

                    objATT.CostCenter = new ATTCostCenter();
                    objATT.Office = new ATTOffice();
                    objATT.Job = new ATTJob();
                    objATT.IncomeType = new ATTIncomeType();
                    //SUBMISSION_NO
                    objATT.BudgetItem = new ATTBudgetItem();
                    objATT.SubmissionNo = string.IsNullOrEmpty(drow["SUBMISSION_NO"].ToString()) ? (Int64?)null : Int64.Parse(drow["SUBMISSION_NO"].ToString());
                    objATT.Office.OfficeCode = string.IsNullOrEmpty(drow["OFFICE_CD"].ToString()) ? (Int32?)null : Int32.Parse(drow["OFFICE_CD"].ToString());
                    objATT.Office.OfficeNameNep = drow["OFFICE_NAME_NEPALI"].ToString();
                    objATT.CostCenter.CostCenterID = string.IsNullOrEmpty(drow["COSTCENTER_ID"].ToString()) ? (Int64?)null : Int64.Parse(drow["COSTCENTER_ID"].ToString());  
                    objATT.CostCenter.CostCenterName = drow["COSTCENTER_NAME"].ToString();
                    objATT.Job.JobID  = string.IsNullOrEmpty(drow["JOB_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["JOB_ID"].ToString()); 
                    objATT.BudgetItem.BudgetItemID = Convert.ToInt64(drow["BI_ID"].ToString());
                    objATT.BudgetItem.BudgetItemEng = drow["BI_DESC"].ToString();
                    objATT.ReqAmount = string.IsNullOrEmpty(drow["REQUEST_AMOUNT"].ToString()) ? (double?)null : double.Parse(drow["REQUEST_AMOUNT"].ToString());
                    objATT.ApproveAmount = string.IsNullOrEmpty(drow["APPROVED_AMOUNT"].ToString()) ? (double?)null : double.Parse(drow["APPROVED_AMOUNT"].ToString());
                    objATT.RequestDate = drow["REQUEST_DATE"].ToString();
                    objATT.ApproveDate = drow["APPROVED_DATE"].ToString();
                    objATT.FiscalYear.FiscalYearName = drow["FISCAL_YR"].ToString();
                    objATT.AccountChart.AccCode = string.IsNullOrEmpty(drow["BI_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["BI_ID"].ToString());
                    objATT.AccountChart.AccName = drow["BI_DESC"].ToString();
                    objATT.AccountChart.CodeNo = drow["CODE_NO"].ToString();
                    objATT.Status = drow["R_STATUS"].ToString();
                    objATT.IncomeType.IncomeTypeName = drow["INCOME_TYPE"].ToString();
                    objATT.SeqNo = string.IsNullOrEmpty(drow["SEQ_NO"].ToString()) ? (Int32?)null : Int32.Parse(drow["SEQ_NO"].ToString());
                   

                    lstATT.Add(objATT);
                }
                paramList.Clear();
                return lstATT;


            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                getConn.CloseDbConn();
            }


        }
    }
}
