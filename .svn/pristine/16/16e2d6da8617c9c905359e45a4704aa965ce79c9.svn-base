using System;
using System.Collections.Generic;

using System.Data;
using HRFA.ATT;
using HRFA.COMMON;
using Oracle.ManagedDataAccess.Client;

namespace HRFA.DataLayer
{
   public class DLLCompany
    {

       public string SaveCompany(List<ATTCompany> lstCompany)
        {
            string sp = "";
            string msg = "No Data To Save !!!";
            GetConnection GetConn = new GetConnection();
            OracleConnection conn = GetConn.GetDbConn(GetConn.LoginUser);
            OracleTransaction tran = conn.BeginTransaction();
            try
            {
                foreach (ATTCompany objCompany in lstCompany)
                {
                    if (objCompany.Action == "A")
                    {
                        sp = "APR_ADD_COMPANY";
                        msg = "Successfully Saved.";
                    }
                    else if (objCompany.Action == "E")
                    {
                        sp = "APR_EDIT_COMPANY";
                        msg = "Successfully Updated.";
                    }

                    if (sp != "")
                    {
                        List<OracleParameter> paramList = new List<OracleParameter>();
                        paramList.Add(SqlHelper.GetOraParam(":P_OFFICE_ID", objCompany.Office.OfficeCode, OracleDbType.Int32, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_COMPANY_ID", null, OracleDbType.Int32, System.Data.ParameterDirection.InputOutput));
                        paramList.Add(SqlHelper.GetOraParam(":P_COMPANY_NAME", objCompany.CompanyName, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_ENTRY_BY", objCompany.EntryBy, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_ENTRY_DATE", null, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_R_STATUS", objCompany.RStatus, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        SqlHelper.ExecuteNonQuery(tran, System.Data.CommandType.StoredProcedure, sp, paramList.ToArray());
                        paramList.Clear();


                    }
                }
                tran.Commit();
                return msg;
            }
            catch (Exception ex)
            {
                tran.Rollback();
                throw new Exception("Error" + ex.Message);
            }
            finally
            {
                GetConn.CloseDbConn();
            }

        }


       public List<ATTCompany> GetCompany(int? OfficeCode)
        {
            GetConnection getConn = new GetConnection();
            OracleConnection conn = getConn.GetDbConn(getConn.LoginUser);

            List<ATTCompany> lstCompany = new List<ATTCompany>();

            try
            {
                string SP = "APR_GET_COMPANY";

                List<OracleParameter> paramList = new List<OracleParameter>();
                paramList.Add(SqlHelper.GetOraParam(":OFFICE_ID", OfficeCode, OracleDbType.Int32, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_RC", null, OracleDbType.RefCursor, System.Data.ParameterDirection.Output));

                DataSet ds = SqlHelper.ExecuteDataset(conn,CommandType.StoredProcedure, SP, paramList.ToArray());

                foreach (DataRow drow in ds.Tables[0].Rows)
                {
                    ATTCompany objCompany = new ATTCompany();

                    objCompany.CompanyID = Int32.Parse(drow["COMPANY_ID"].ToString());
                    objCompany.Office.OfficeNameNep = drow["OFFICE_NAME_NEPALI"].ToString();
                    objCompany.Office.OfficeCode = string.IsNullOrEmpty(drow["OFFICE_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["OFFICE_ID"].ToString());
                    objCompany.CompanyName = drow["COMPANY_NAME"].ToString();
                    objCompany.EntryBy = drow["ENTRY_BY"].ToString();
                    objCompany.EntryDate = drow["ENTRY_DATE"].ToString();
                    objCompany.RStatus = drow["R_STATUS"].ToString();
                    objCompany.Action = "";
                    objCompany.TranNo = string.IsNullOrEmpty(drow["TRAN_NO"].ToString()) ? (Int64?)null : Int64.Parse(drow["TRAN_NO"].ToString());
                    lstCompany.Add(objCompany);

                }

                return lstCompany;
            }
            catch (Exception ex)
            {

                throw (ex);
            }
            finally
            {
                getConn.CloseDbConn();
            }
        }

        public string DeleteCompany(int? CompanyID)
        {
            GetConnection GetConn = new GetConnection();
            OracleConnection conn = GetConn.GetDbConn(GetConn.LoginUser);



            try
            {
                string SP = "APR_DELETE_COMPANY";

                List<OracleParameter> ParamList = new List<OracleParameter>();
                ParamList.Add(SqlHelper.GetOraParam(":P_COMPANY_ID", CompanyID, OracleDbType.Int32, ParameterDirection.InputOutput));

                SqlHelper.ExecuteNonQuery(conn, CommandType.StoredProcedure, SP, ParamList.ToArray());

                return "Deleted Successfully.";
            }
            catch (Exception ex)
            {
                return ex.Message;
            }
            finally
            {
                GetConn.CloseDbConn();
            }
        }
    }
}
