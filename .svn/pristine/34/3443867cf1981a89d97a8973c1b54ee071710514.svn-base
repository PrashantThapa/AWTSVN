using System;
using System.Collections.Generic;
using System.Data;
using Oracle.DataAccess.Client;
using HRFA.ATT;
using HRFA.COMMON;
using System.Configuration;


namespace HRFA.DataLayer
{
    public class DLLPromotion
    {
        public List<ATTPromotion> GetOfficeEmpPost(int? empID)
        {
            GetConnection conn = new GetConnection();
            OracleConnection dbConn = conn.GetDbConn(conn.LoginUser);

            try
            {
                string SP = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_GET_CURRENT_EMP_POST";

                List<OracleParameter> paramList = new List<OracleParameter>();

                paramList.Add(SqlHelper.GetOraParam(":p_EMP_ID", empID, OracleDbType.Int32, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":p_rc", null, OracleDbType.RefCursor, ParameterDirection.Output));
                DataSet ds = SqlHelper.ExecuteDataset(dbConn, CommandType.StoredProcedure, SP, paramList.ToArray());

                List<ATTPromotion> lst = new List<ATTPromotion>();

                foreach (DataRow drow in ((DataTable)ds.Tables[0]).Rows)
                {
                    ATTPromotion obj = new ATTPromotion();

                    obj.EmpID = string.IsNullOrEmpty(drow["EMP_ID"].ToString()) ? (Int16?)null : Int16.Parse(drow["EMP_ID"].ToString());
                    obj.Office.OfficeCode = string.IsNullOrEmpty(drow["OFFICE_CD"].ToString()) ? (Int16?)null : Int16.Parse(drow["OFFICE_CD"].ToString());
                    obj.Office.OfficeNameNep = drow["OFFICE_NAME_NEPALI"].ToString();
                    obj.Post.PostID = string.IsNullOrEmpty(drow["POST_ID"].ToString()) ? (Int16?)null : Int16.Parse(drow["POST_ID"].ToString());
                    obj.Post.PostDesc = drow["POST_DESC"].ToString();
                    obj.OfficeDarbandi.PostSeq = string.IsNullOrEmpty(drow["POST_SEQ"].ToString()) ? (Int16?)null : Int16.Parse(drow["POST_SEQ"].ToString());
                    lst.Add(obj);
                }

                return lst;

            }
            catch (Exception ex)
            {
                // tran.Rollback();
                throw (ex);
            }
            finally
            {
                conn.CloseDbConn();
            }
        }

        public object GetPromotionType(int? promoTypeID)
        {
            GetConnection conn = new GetConnection();
            OracleConnection dbConn = conn.GetDbConn(conn.LoginUser);

            try
            {
                string SP = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_GETPROMOTIONTYPEBYID";

                List<OracleParameter> paramList = new List<OracleParameter>();

                paramList.Add(SqlHelper.GetOraParam(":P_PROMOTIONTYPE_ID", promoTypeID, OracleDbType.Int32, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_RC", null, OracleDbType.RefCursor, ParameterDirection.Output));
                DataSet ds = SqlHelper.ExecuteDataset(dbConn, CommandType.StoredProcedure, SP, paramList.ToArray());

                List<ATTPromotionType> lst = new List<ATTPromotionType>();

                foreach (DataRow drow in ((DataTable)ds.Tables[0]).Rows)
                {
                    ATTPromotionType obj = new ATTPromotionType();

                    obj.PromoTypeID = string.IsNullOrEmpty(drow["PROMO_TYPE_ID"].ToString()) ? (Int16?)null : Int16.Parse(drow["PROMO_TYPE_ID"].ToString());
                    obj.PromoTypeDesc = drow["PROMO_TYPE_DESC"].ToString();
                    obj.PromoTypeEng = drow["PROMO_TYPE_ENG"].ToString();
                    obj.Status = drow["STATUS"].ToString();
                    obj.FromDate = drow["FROM_DATE"].ToString();
                    obj.ToDate= drow["TO_DATE"].ToString();
                    obj.EntryBy = drow["ENTRY_BY"].ToString();
                    obj.EntryDate = drow["ENTRY_DATE"].ToString();
                    lst.Add(obj);
                }

                return lst;

            }
            catch (Exception ex)
            {
                // tran.Rollback();
                throw (ex);
            }
            finally
            {
                conn.CloseDbConn();
            }
        }

        public string SavePromotion(ATTPromotion objPromotion,string appID, string modID)
        {
            string sp = "";
            string msg = "";

            GetConnection getConn = new GetConnection();
            OracleConnection conn = getConn.GetDbConn(getConn.LoginUser);
            OracleTransaction tran = conn.BeginTransaction();

            try
            {
                
                if (objPromotion.Action == "A")
                {
                    sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_ADD_PROMOTION";
                    msg = "Successfully Saved.";
                }

                if (sp != "")
                {
                    List<OracleParameter> paramList = new List<OracleParameter>();

                    paramList.Add(SqlHelper.GetOraParam(":p_SUBMISSION_NO", objPromotion.SubmissionNo, OracleDbType.Int64, System.Data.ParameterDirection.InputOutput));
                    paramList.Add(SqlHelper.GetOraParam(":p_EMP_ID", objPromotion.EmpID, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                    paramList.Add(SqlHelper.GetOraParam(":p_LETTER_ISSUE_DATE", objPromotion.LetterIssueDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                    paramList.Add(SqlHelper.GetOraParam(":p_EFFECTIVE_DATE", objPromotion.EffectiveDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                    paramList.Add(SqlHelper.GetOraParam(":p_EFFECTIVE_TILL_DATE", objPromotion.EffectiveTillDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                    paramList.Add(SqlHelper.GetOraParam(":p_SUPERVISOR_EMP_ID", objPromotion.SupervisorID, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                    paramList.Add(SqlHelper.GetOraParam(":p_PROMO_TYPE_ID", objPromotion.PromoTypeID, OracleDbType.Int32, System.Data.ParameterDirection.Input));
					//paramList.Add(SqlHelper.GetOraParam(":p_FROM_DATE", objPromotion.FromDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
					paramList.Add(SqlHelper.GetOraParam(":p_FROM_DATE", objPromotion.EffectiveDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
					paramList.Add(SqlHelper.GetOraParam(":p_TO_DATE", objPromotion.ToDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                    paramList.Add(SqlHelper.GetOraParam(":p_R_STATUS", objPromotion.Status, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                    paramList.Add(SqlHelper.GetOraParam(":p_ENTRY_BY", objPromotion.EntryBy, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                    paramList.Add(SqlHelper.GetOraParam(":p_ENTRY_DATE", objPromotion.EntryDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                    paramList.Add(SqlHelper.GetOraParam(":P_PROMO_POST", objPromotion.PromotionPost.PostID, OracleDbType.Int32, System.Data.ParameterDirection.Input));

                    paramList[0].Size = 16;
                    SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, sp, paramList.ToArray());
                    objPromotion.SubmissionNo = Int64.Parse(paramList[0].Value.ToString());

                    if (objPromotion.OldSubmissionNo != null)
                    {
                        DLLUserTranVerification dllUTV = new DLLUserTranVerification();
                        dllUTV.SaveVerifyLog(tran, objPromotion.EntryBy, objPromotion.OldSubmissionNo, objPromotion.SubmissionNo, appID, modID);
                    }
                    paramList.Clear();
                    tran.Commit();

                }
            }
            catch (Exception ex)
            {

                tran.Rollback();
                throw (ex);
            }
            finally
            {
                getConn.CloseDbConn();
            }
            //return msg;
            return msg + "</br> Please Note Your Submission No.</br><b>" + objPromotion.SubmissionNo + "</b>";
        }

        public ATTPromotion GetPromotion(Int64? submissionNo)
        {
            GetConnection getConn = new GetConnection();
            OracleConnection conn = getConn.GetDbConn(getConn.LoginUser);

            try
            {
                string SP = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_GET_PROMOTION";

                List<OracleParameter> paramList = new List<OracleParameter>();
                paramList.Add(SqlHelper.GetOraParam(":P_SUBMISSION_NO", submissionNo, OracleDbType.Int64, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_RC", null, OracleDbType.RefCursor, ParameterDirection.Output));

                DataSet ds = SqlHelper.ExecuteDataset(conn, CommandType.StoredProcedure, SP, paramList.ToArray());

                ATTPromotion objPromotion = new ATTPromotion();

                if (ds.Tables[0].Rows.Count > 0)
                {
                    DataRow drow = ds.Tables[0].Rows[0];
                    objPromotion.SubmissionNo = string.IsNullOrEmpty(drow["SUBMISSION_NO"].ToString()) ? (Int64?)null : Int64.Parse(drow["SUBMISSION_NO"].ToString());
                    objPromotion.EmpID = string.IsNullOrEmpty(drow["EMP_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["EMP_ID"].ToString());
                    objPromotion.EmployeeName = drow["EMP_NAME"].ToString();
                    objPromotion.Office.OfficeCode = string.IsNullOrEmpty(drow["OFFICE_CD"].ToString()) ? (Int32?)null : Int32.Parse(drow["OFFICE_CD"].ToString());
                    objPromotion.Office.OfficeName = drow["OFFICE_NAME_NEPALI"].ToString();
                    objPromotion.PromotionPost.PostID = string.IsNullOrEmpty(drow["PROMO_POST"].ToString()) ? (Int16?)null : Int16.Parse(drow["PROMO_POST"].ToString());
                    objPromotion.Post.PostID = string.IsNullOrEmpty(drow["POST_ID"].ToString()) ? (Int16?)null : Int16.Parse(drow["PROMO_POST"].ToString());
                    objPromotion.Post.PostDesc = drow["POST_DESC"].ToString();
                    objPromotion.LetterIssueDate = drow["LETTER_ISSUE_DATE"].ToString();
                    objPromotion.EffectiveDate = drow["EFFECTIVE_DATE"].ToString();
                    objPromotion.EffectiveTillDate = drow["EFFECTIVE_TILL_DATE"].ToString();
                    objPromotion.SupervisorID = string.IsNullOrEmpty(drow["SUP_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["SUP_ID"].ToString());
                    objPromotion.SupervisorName = drow["SUPERVISOR_NAME"].ToString();
                    objPromotion.PromoTypeID = string.IsNullOrEmpty(drow["PROMO_TYPE_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["PROMO_TYPE_ID"].ToString());
                    objPromotion.PromotionPost.PostID = string.IsNullOrEmpty(drow["PROMO_POST"].ToString()) ? (Int16?)null : Int16.Parse(drow["PROMO_POST"].ToString());
                    objPromotion.FromDate = drow["FROM_DATE"].ToString();

                }
                else 
                {
                    objPromotion = null;
                }
                return objPromotion;
            }
            catch (Exception ex)
            {

                throw (ex);
            }
            finally
            {
                getConn.CloseDbConn();
            }
        }
    }
}
