using System;
using System.Collections.Generic;
using HRFA.ATT;
using HRFA.BLL;
using HRFA.COMMON;

namespace HRFA.Handlers.FAMS
{

	public class PurchaseOrderHandler : BaseHandler
    {
        public object SavePurchaseOrder(string args,string appID, string modID)
        {
            JsonResponse response = new JsonResponse();


            List<ATTPurchaseOrder> objPurchaseOrder = JsonUtility.DeSerialize(args, typeof(List<ATTPurchaseOrder>)) as List<ATTPurchaseOrder>;
            BLLPurchaseOrder bllPurchaseOrder = new BLLPurchaseOrder();
            response = bllPurchaseOrder.SavePurchaseOrder(objPurchaseOrder,appID,modID);

            return JsonUtility.Serialize(response);

        }

        public object GetPurchaseOrderBySubmissionNo(Int64? submissionNo)
        {
            JsonResponse response = new JsonResponse();
            BLLPurchaseOrder bllPurchaseOrder = new BLLPurchaseOrder();
            try
            {
                response = bllPurchaseOrder.GetPurchaseOrderBySubmissionNo(submissionNo);
            }
            catch (Exception ex)
            {
                response.Message = ex.Message;
                response.IsSucess = false;
            }
            return JsonUtility.Serialize(response);
        }


        public object GetBlanketPurchase(Int32? blanketPurchaseID)
        {
            JsonResponse response = new JsonResponse();
            BLLPurchaseOrder bllPurchaseOrder = new BLLPurchaseOrder();
            try
            {
                response = bllPurchaseOrder.GetBlanketPurchase(blanketPurchaseID);
            }
            catch (Exception ex)
            {
                response.Message = ex.Message;
                response.IsSucess = false;
            }
            return JsonUtility.Serialize(response);
        }
        
       
    }
}