using System;
using System.Collections.Generic;
using System.Data;
using HRFA.ATT;
using HRFA.COMMON;

using System.Configuration;
using Oracle.ManagedDataAccess.Client;

namespace HRFA.DataLayer
{
    public class DLLBudgetRequest
    {
        public List<ATTBudgetRequest> ChangeCostCenter(Int32? OfficeCD, Int32? CostCenterID, string fiscalyear,string incomeType)
        {
            string SP = "";
            GetConnection getConn = new GetConnection();
            OracleConnection conn = getConn.GetDbConn(getConn.LoginUser);

            try
            {
                SP = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_BUDGET_REQUEST_BYFISCALYR";
                List<OracleParameter> paramList = new List<OracleParameter>();
                paramList.Add(SqlHelper.GetOraParam(":P_FISCAL_YR", fiscalyear, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_OFFICE_CD", OfficeCD, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_COSTCENTER_ID", CostCenterID, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_INCOME_TYPE", incomeType, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_RC", null, OracleDbType.RefCursor, System.Data.ParameterDirection.Output));

                DataSet ds = SqlHelper.ExecuteDataset(conn, CommandType.StoredProcedure, SP, paramList.ToArray());
                List<ATTBudgetRequest> lstATT = new List<ATTBudgetRequest>();

                foreach (DataRow drow in ((DataTable)ds.Tables[0]).Rows)
                {
                    ATTBudgetRequest objATT = new ATTBudgetRequest();

                    objATT.CostCenter = new ATTCostCenter();
                    objATT.Office = new ATTOffice();
                    objATT.AccountChart = new ATTAccountChart();
                    objATT.FiscalYear = new ATTFiscalYear();
                    objATT.IncomeType = new ATTIncomeType();

                    objATT.SubmissionNo = string.IsNullOrEmpty(drow["SUBMISSION_NO"].ToString()) ? (Int64?)null : Int64.Parse(drow["SUBMISSION_NO"].ToString());

                    objATT.RequestedDate = drow["REQUEST_DATE"].ToString();
                    objATT.FromDate = drow["FROM_DATE"].ToString();
                    objATT.ToDate = drow["TO_DATE"].ToString();

                    objATT.FiscalYear.FiscalYearName = drow["FISCAL_YR"].ToString();

                    objATT.EntryBy = drow["ENTRY_BY"].ToString();
                    objATT.EntryDate = drow["ENTRY_DATE"].ToString();
                    objATT.Status = drow["R_STATUS"].ToString();

                    objATT.Amount = string.IsNullOrEmpty(drow["AMOUNT"].ToString()) ? (double?)null : double.Parse(drow["AMOUNT"].ToString());

                    //objATT.Job.JobID = string.IsNullOrEmpty(drow["JOB_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["JOB_ID"].ToString());

                    //objATT.BudgetItem.BudgetItemID = string.IsNullOrEmpty(drow["BI_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["BI_ID"].ToString());
                    //objATT.BudgetItem.BudgetItemName = drow["BI_DESC"].ToString();

                    objATT.AccountChart.AccCode = string.IsNullOrEmpty(drow["BI_ID1"].ToString()) ? (Int32?)null : Int32.Parse(drow["BI_ID1"].ToString());
                    objATT.AccountChart.AccName = drow["BI_DESC"].ToString();
                    objATT.AccountChart.CodeNo = drow["CODE_NO"].ToString();
                   


                    objATT.Office.OfficeCode = string.IsNullOrEmpty(drow["OFFICE_CD"].ToString()) ? (Int32?)null : Int32.Parse(drow["OFFICE_CD"].ToString());

                    objATT.CostCenter.CostCenterID = string.IsNullOrEmpty(drow["COSTCENTER_ID"].ToString()) ? (Int64?)null : Int64.Parse(drow["COSTCENTER_ID"].ToString());

                    objATT.Office.OfficeNameNep = drow["OFFICE_NAME_NEPALI"].ToString();

                    objATT.CostCenter.CostCenterName = drow["COSTCENTER_NAME"].ToString();
                    objATT.IncomeType.IncomeTypeName = drow["INCOME_TYPE"].ToString();

                    lstATT.Add(objATT);
                }
                paramList.Clear();
                return lstATT;


            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                getConn.CloseDbConn();
            }


        }

        public List<ATTBudgetRequest> ChangeCostCenter(Int32? OfficeCD, Int32? CostCenterID)
        {
            string SP = "";
            GetConnection getConn = new GetConnection();
            OracleConnection conn = getConn.GetDbConn(getConn.LoginUser);

            try
            {
                SP = "APR_GET_CHART_OFACC";
                List<OracleParameter> paramList = new List<OracleParameter>();
                paramList.Add(SqlHelper.GetOraParam(":P_OFFICE_CD", OfficeCD, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_COSTCENTER_ID", CostCenterID, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_RC", null, OracleDbType.RefCursor, System.Data.ParameterDirection.Output));

                DataSet ds = SqlHelper.ExecuteDataset(conn, CommandType.StoredProcedure, SP, paramList.ToArray());
                List<ATTBudgetRequest> lstATT = new List<ATTBudgetRequest>();

                foreach (DataRow drow in ((DataTable)ds.Tables[0]).Rows)
                {
                    ATTBudgetRequest objATT = new ATTBudgetRequest();

                    objATT.CostCenter = new ATTCostCenter();
                    objATT.Office = new ATTOffice();
                    objATT.AccountChart = new ATTAccountChart();
                    objATT.SubmissionNo = null;

                    objATT.AccountChart.AccCode = string.IsNullOrEmpty(drow["AC_CODE"].ToString()) ? (Int32?)null : Int32.Parse(drow["AC_CODE"].ToString());
                    objATT.AccountChart.AccName = drow["AC_NAME"].ToString();
                    objATT.AccountChart.CodeNo = drow["CODE_NO"].ToString();

                    objATT.Office.OfficeCode = string.IsNullOrEmpty(drow["OFFICE_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["OFFICE_ID"].ToString());

                    objATT.CostCenter.CostCenterID = string.IsNullOrEmpty(drow["COSTCENTER_ID"].ToString()) ? (Int64?)null : Int64.Parse(drow["COSTCENTER_ID"].ToString());

                    objATT.Office.OfficeNameNep = drow["OFFICE_NAME_NEPALI"].ToString();

                    objATT.CostCenter.CostCenterName = drow["COSTCENTER_NAME"].ToString();

                    
                  


                    lstATT.Add(objATT);
                }
                paramList.Clear();
                return lstATT;


            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                getConn.CloseDbConn();
            }


        }

        public string SaveBudgetRequest(ATTBudgetRequest objBudgetRequest, string appID, string modID, string date)
        {
            string msg = "";
            string spD = "";
            string sp = "";
            //Int64? subNo = null;
            bool flag = false;
            GetConnection conn = new GetConnection();
            OracleConnection dbConn = conn.GetDbConn(conn.LoginUser);
            OracleTransaction tran = dbConn.BeginTransaction();

            try
            {
                if (objBudgetRequest.Action == "A")
                {
                    sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_ADD_BUDGET_REQUEST";
                    msg = " Successfully Save !!!";
                }
                else if (objBudgetRequest.Action=="E")
                {
                    sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_EDIT_BUDGET_REQUEST";
                    msg = " Successfully Update !!!";
                }

                if (sp != "")
                {
           
                
                List<OracleParameter> paramList = new List<OracleParameter>();
                paramList.Add(SqlHelper.GetOraParam(":p_SUBMISSION_NO", objBudgetRequest.BudgetRequest[0].SubmissionNo, OracleDbType.Int64, ParameterDirection.InputOutput));
                paramList.Add(SqlHelper.GetOraParam(":p_OFFICE_CD", objBudgetRequest.Office.OfficeCode, OracleDbType.Int32, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":p_COSTCENTER_ID", objBudgetRequest.CostCenter.CostCenterID, OracleDbType.Int64, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":p_REQUEST_DATE", date, OracleDbType.Varchar2, ParameterDirection.Input));

                paramList.Add(SqlHelper.GetOraParam(":p_FROM_DATE", objBudgetRequest.FromDate, OracleDbType.Varchar2, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":p_TO_DATE", objBudgetRequest.ToDate, OracleDbType.Varchar2, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":p_R_STATUS", objBudgetRequest.Status, OracleDbType.Varchar2, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":p_ENTRY_BY", objBudgetRequest.EntryBy, OracleDbType.Varchar2, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":p_ENTRY_DATE", objBudgetRequest.EntryDate, OracleDbType.Varchar2, ParameterDirection.Input));

                paramList.Add(SqlHelper.GetOraParam(":P_FISCAL_YRID", objBudgetRequest.FiscalYear.FiscalYearName, OracleDbType.Varchar2, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_INCOME_TYPE", objBudgetRequest.IncomeType.IncomeTypeName, OracleDbType.Varchar2, ParameterDirection.Input));

               
                    
                    paramList[0].Size = 20;


                SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, sp, paramList.ToArray());

                objBudgetRequest.SubmissionNo = Convert.ToInt64(paramList[0].Value.ToString());
                paramList.Clear();

                foreach (ATTBudgetRequest obj in objBudgetRequest.BudgetRequest)
                {
                    if (objBudgetRequest.Action == "A")
                    {
                        //           sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_ADD_BUDGET_REQUEST";
                        spD = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_ADD_BUDGET_REQUEST_DET";
                        msg = "Successfully Saved !!!";
                    }
                    else if (objBudgetRequest.Action == "E")
                    {
                        spD = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_EDIT_BUDGET_REQUEST_DET";
                        msg = "Successfully Updated !!!";
                    }
                  //if (sp != "")
                    //{
                       

                        if (spD != "")
                        {
                            List<OracleParameter> paramListD = new List<OracleParameter>();
                            paramListD.Add(SqlHelper.GetOraParam(":p_SUBMISSION_NO", objBudgetRequest.SubmissionNo, OracleDbType.Int64, ParameterDirection.Input));
                            paramListD.Add(SqlHelper.GetOraParam(":p_OFFICE_CD", objBudgetRequest.Office.OfficeCode, OracleDbType.Int32, ParameterDirection.Input));
                            paramListD.Add(SqlHelper.GetOraParam(":p_COSTCENTER_ID", objBudgetRequest.CostCenter.CostCenterID, OracleDbType.Int64, ParameterDirection.Input));
                            paramListD.Add(SqlHelper.GetOraParam(":p_REQUEST_DATE", date, OracleDbType.Varchar2, ParameterDirection.Input));

                            paramListD.Add(SqlHelper.GetOraParam(":p_BI_ID", obj.AccountChart.AccCode, OracleDbType.Int64, ParameterDirection.Input));
                            paramListD.Add(SqlHelper.GetOraParam(":p_JOB_ID", "1", OracleDbType.Int32, ParameterDirection.Input));
                            paramListD.Add(SqlHelper.GetOraParam(":p_AMOUNT", obj.Amount, OracleDbType.Double, ParameterDirection.Input));

                            paramListD.Add(SqlHelper.GetOraParam(":p_FROM_DATE", obj.FromDate, OracleDbType.Varchar2, ParameterDirection.Input));
                            paramListD.Add(SqlHelper.GetOraParam(":p_TO_DATE", obj.ToDate, OracleDbType.Varchar2, ParameterDirection.Input));
                            paramListD.Add(SqlHelper.GetOraParam(":p_R_STATUS", obj.Status, OracleDbType.Varchar2, ParameterDirection.Input));
                            paramListD.Add(SqlHelper.GetOraParam(":p_ENTRY_BY", obj.EntryBy, OracleDbType.Varchar2, ParameterDirection.Input));
                            paramListD.Add(SqlHelper.GetOraParam(":p_ENTRY_DATE", obj.EntryDate, OracleDbType.Varchar2, ParameterDirection.Input));

                         //   paramList.Add(SqlHelper.GetOraParam(":P_FISCAL_YRID", objBudgetRequest.FiscalYear.FiscalYearName, OracleDbType.Varchar2, ParameterDirection.Input));

                            SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, spD, paramListD.ToArray());
                            paramListD.Clear();
                        }
                        if (obj.OldSubmissionNo != null && flag==false)
                        {
                            DLLUserTranVerification dllUTV = new DLLUserTranVerification();
                            dllUTV.SaveVerifyLog(tran, obj.EntryBy, obj.OldSubmissionNo, obj.SubmissionNo, appID, modID);
                            flag = true;
                        }
                    }
                }
                
                tran.Commit();
            }
            catch (Exception ex)
            {
                msg = "Error in Saving.";
                tran.Rollback();
                throw (ex);
            }
            finally
            {
                conn.CloseDbConn();
            }
            // return msg;
            return msg + "</br> Please Note Your Submission No.</br><b>" + objBudgetRequest.SubmissionNo + "</b>";	
        }
        public List<ATTBudgetRequest> GetBudgetRequestBySubNo(Int64? SubNo)
        {
            string SP = "";
            GetConnection getConn = new GetConnection();
            OracleConnection conn = getConn.GetDbConn(getConn.LoginUser);

            try
            {
                SP = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_GET_BUDGET_REQUEST";
                List<OracleParameter> paramList = new List<OracleParameter>();
                paramList.Add(SqlHelper.GetOraParam(":P_SUBMISSION_NO", SubNo, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_RC", null, OracleDbType.RefCursor, System.Data.ParameterDirection.Output));
                
                DataSet ds = SqlHelper.ExecuteDataset(conn, CommandType.StoredProcedure, SP, paramList.ToArray());
                List<ATTBudgetRequest> lstATT = new List<ATTBudgetRequest>();

                foreach (DataRow drow in ((DataTable)ds.Tables[0]).Rows)
                {
                    ATTBudgetRequest objATT = new ATTBudgetRequest();
                    
                        objATT.Job = new ATTJob();
                        objATT.CostCenter = new ATTCostCenter();
                        objATT.Office = new ATTOffice();
                        objATT.BudgetItem = new ATTBudgetItem();
                        objATT.AccountChart = new ATTAccountChart();

                        objATT.FiscalYear = new ATTFiscalYear();

                        objATT.SubmissionNo = string.IsNullOrEmpty(drow["SUBMISSION_NO"].ToString()) ? (Int64?)null : Int64.Parse(drow["SUBMISSION_NO"].ToString());
                        objATT.Office.OfficeCode = string.IsNullOrEmpty(drow["OFFICE_CD"].ToString()) ? (Int32?)null : Int32.Parse(drow["OFFICE_CD"].ToString());
                        objATT.Office.OfficeNameNep = drow["OFFICE_NAME_NEPALI"].ToString();
                        objATT.CostCenter.CostCenterID = string.IsNullOrEmpty(drow["COSTCENTER_ID"].ToString()) ? (Int64?)null : Int64.Parse(drow["COSTCENTER_ID"].ToString());
                        objATT.Job.JobID = string.IsNullOrEmpty(drow["JOB_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["JOB_ID"].ToString());
                        objATT.BudgetItem.BudgetItemID = string.IsNullOrEmpty(drow["BI_ID"].ToString()) ? (Int64?)null : Int64.Parse(drow["BI_ID"].ToString()); 
                        objATT.CostCenter.CostCenterName =drow["COSTCENTER_NAME"].ToString();
                        objATT.Job.JobDesc =drow["JOB_DESC"].ToString();
                        //objATT.BudgetItem.BudgetItemName = drow["BI_DESC"].ToString();

                        objATT.AccountChart.AccCode = string.IsNullOrEmpty(drow["BI_ID"].ToString()) ? (Int32?)null : Int32.Parse(drow["BI_ID"].ToString());
                        objATT.AccountChart.AccName = drow["BI_DESC"].ToString();

                        objATT.AccountChart.CodeNo = drow["CODE_NO"].ToString();
                        objATT.RequestedDate = drow["REQUEST_DATE"].ToString();
                        objATT.Amount = string.IsNullOrEmpty(drow["AMOUNT"].ToString()) ? (double?)null : double.Parse(drow["AMOUNT"].ToString()); 
                        objATT.FromDate = drow["FROM_DATE"].ToString();
                        objATT.ToDate = drow["TO_DATE"].ToString();
                        objATT.EntryDate = drow["ENTRY_DATE"].ToString();
                        objATT.EntryBy = drow["ENTRY_BY"].ToString();
                        objATT.Status = drow["R_STATUS"].ToString();
                        objATT.FiscalYear.FiscalYearName = drow["FISCAL_YR"].ToString();//INCOME_TYPE
                        objATT.IncomeType.IncomeTypeName = drow["INCOME_TYPE"].ToString();
                   
                    lstATT.Add(objATT);
                }
                paramList.Clear();
                return lstATT;


            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                getConn.CloseDbConn();
            }


        }
        
        public List<ATTCostCenter> GetCostCenter(Int32? OfficeCD)
        {
            GetConnection conn = new GetConnection();
            OracleConnection dbConn = conn.GetDbConn(conn.LoginUser);
            try
            {
                string SP = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_GET_COSTCENTER_BYOFFICE";

                List<OracleParameter> paramList = new List<OracleParameter>();

                paramList.Add(SqlHelper.GetOraParam(":p_OfficeCD", OfficeCD, OracleDbType.Int64, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":p_rc", null, OracleDbType.RefCursor, ParameterDirection.Output));
                DataSet ds = SqlHelper.ExecuteDataset(dbConn, CommandType.StoredProcedure, SP, paramList.ToArray());

                List<ATTCostCenter> lst = new List<ATTCostCenter>();

                foreach (DataRow drow in ((DataTable)ds.Tables[0]).Rows)
                {
                    ATTCostCenter obj = new ATTCostCenter();
                    obj.CostCenterID = Convert.ToInt64(drow["COSTCENTER_ID"].ToString());
                    obj.CostCenterName = drow["COSTCENTER_NAME"].ToString();

                    lst.Add(obj);
                }

                return lst;

            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                conn.CloseDbConn();
            }
        }

        public List<ATTJob> GetJob()
        {
            GetConnection conn = new GetConnection();
            OracleConnection dbConn = conn.GetDbConn(conn.LoginUser);

            try
            {
                string SP = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_GET_JOB";

                List<OracleParameter> paramList = new List<OracleParameter>();

                paramList.Add(SqlHelper.GetOraParam(":P_JOB_ID", null, OracleDbType.Int64, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":p_rc", null, OracleDbType.RefCursor, ParameterDirection.Output));
                DataSet ds = SqlHelper.ExecuteDataset(dbConn, CommandType.StoredProcedure, SP, paramList.ToArray());

                List<ATTJob> lst = new List<ATTJob>();

                foreach (DataRow drow in ((DataTable)ds.Tables[0]).Rows)
                {
                    ATTJob obj = new ATTJob();

                    obj.JobID = Convert.ToInt32(drow["JOB_ID"].ToString());
                    obj.JobDesc = drow["JOB_DESC"].ToString();
                    lst.Add(obj);
                }

                return lst;

            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                conn.CloseDbConn();
            }
        }

      
    }
}
