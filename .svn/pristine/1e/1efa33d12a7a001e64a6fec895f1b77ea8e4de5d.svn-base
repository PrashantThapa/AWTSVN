using System;
using System.Collections.Generic;
using Oracle.DataAccess.Client;
using System.Data;
using HRFA.ATT;
using HRFA.COMMON;
using System.Configuration;


namespace HRFA.DataLayer
{
    public class DLLPersonLanguage
    {
        public List<ATTPersonLanguage> GetPersonLanguages(Int64? ID, Int32? seqNo, OracleConnection conn, bool isDirty = false)
        {
            List<ATTPersonLanguage> lst = new List<ATTPersonLanguage>();

            try
            {
                List<OracleParameter> paramList = new List<OracleParameter>();
                string sp = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_GET_PERSON_LANGUAGE";

                if (isDirty)
                {
                    sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_GET_PERSON_LANGUAGE";
                }



                paramList.Add(SqlHelper.GetOraParam(":p_SUBMISSION_NO", ID, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_SEQNO", seqNo, OracleDbType.Int32, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_RC", null, OracleDbType.RefCursor, ParameterDirection.Output));

                DataSet ds = SqlHelper.ExecuteDataset(conn, CommandType.StoredProcedure, sp, paramList.ToArray());

                if (ds.Tables[0].Rows.Count > 0)
                {
                    foreach (DataRow dr in ((DataTable)ds.Tables[0]).Rows)
                    {

                        ATTPersonLanguage obj = new ATTPersonLanguage();

                        if (isDirty)
                        {
                            obj.Person.SubmissionNo = string.IsNullOrEmpty(dr["SUBMISSION_NO"].ToString()) ? (Int64?)null : Int64.Parse(dr["SUBMISSION_NO"].ToString());
                            obj.Person.SeqNo = string.IsNullOrEmpty(dr["SEQ_NO"].ToString()) ? (Int32?)null : Int32.Parse(dr["SEQ_NO"].ToString());
                        }
                        else
                        {
                            obj.Person.PID = string.IsNullOrEmpty(dr["P_ID"].ToString()) ? (Int64?)null : Int64.Parse(dr["P_ID"].ToString());
                        }

                        obj.Language.LanguageID = string.IsNullOrEmpty(dr["LANG_ID"].ToString()) ? (Int32?)null : Int32.Parse(dr["LANG_ID"].ToString());
                        obj.Language.LanguageName = dr["LANG_NAME"].ToString();
                        obj.ReadingFluency = dr["READING_FLUENCY"].ToString();
                        obj.WritingFluency = dr["WRITING_FLUENCY"].ToString();
                        obj.SpeakingFluency = dr["SPEAKING_FLUENCY"].ToString();
                        obj.ListeningFluency = dr["LISTENING_FLUENCY"].ToString();
                        obj.MotherLang = dr["MOTHER_LANG"].ToString();
                        obj.FromDate = dr["FROM_DATE"].ToString();
                        obj.ToDate = dr["TO_DATE"].ToString();
                        obj.EntryBy = dr["ENTRY_BY"].ToString();
                        obj.EntryDate = dr["ENTRY_DATE"].ToString();
                        obj.Status = dr["R_STAUS"].ToString();

                        lst.Add(obj);

                    }

                }

                return lst;

            }
            catch (Exception ex)
            {

                throw (ex);
            }
        }

        #region Dirty
        public bool SaveDirtyPersonLanguage(List<ATTPersonLanguage> lst, Int64? submissionNo, Int32? seqNo, string entryBy, OracleTransaction tran)
        {
            try
            {
                string sp = "";

                foreach (ATTPersonLanguage objPersonLanguage in lst)
                {
                    if (objPersonLanguage.Action == "E")
                    {
                        sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_EDIT_PERSON_LANGUAGE";

                    }
                    else if (objPersonLanguage.Action == "A")
                    {
                        sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_ADD_PERSON_LANGUAGE";

                    }

                    if (sp != "")
                    {
                        List<OracleParameter> paramList = new List<OracleParameter>();

                        paramList.Add(SqlHelper.GetOraParam(":p_SUBMISSION_NO", submissionNo, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_SEQ_NO", seqNo, OracleDbType.Int32, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_LANG_ID", objPersonLanguage.Language.LanguageID, OracleDbType.Int32, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_READING_FLUENCY", objPersonLanguage.ReadingFluency, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_WRITING_FLUENCY", objPersonLanguage.WritingFluency, OracleDbType.Varchar2, System.Data.ParameterDirection.InputOutput));
                        paramList.Add(SqlHelper.GetOraParam(":p_SPEAKING_FLUENCY", objPersonLanguage.SpeakingFluency, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_LISTENING_FLUENCY", objPersonLanguage.ListeningFluency, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_MOTHER_LANG", objPersonLanguage.MotherLang, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_FROM_DATE", objPersonLanguage.FromDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_TO_DATE", objPersonLanguage.ToDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_ENTRY_BY", objPersonLanguage.EntryBy, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_ENTRY_DATE", null, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_R_STATUS", objPersonLanguage.Status, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));

                        SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, sp, paramList.ToArray());

                        paramList.Clear();

                    }
                   
                }

                return true;
            }
            catch (Exception ex)
            {
                throw new Exception("Error in Saving Person Language !!!" + ex.Message);
                throw (ex);
            }
        }
        #endregion
    }
}
