using System;
using System.Collections.Generic;
using System.Data;
using HRFA.ATT;
using HRFA.COMMON;

using System.Configuration;
using Oracle.ManagedDataAccess.Client;

namespace HRFA.DataLayer
{
    public class DLLMedicalAtt
    {

        /// <summary>
        /// This method Save/Update Medical Attribute
        /// </summary>
        /// <param name="objMedAtt"></param>
        /// <returns>String as a Message about Save/Update Medical Attribute</returns>
        /// 

        public  string SaveMedicalAtt(List<ATTMedicalAtt> objMedAtt)
        {
            string sp = "No Data To Save!!!";
            string msg = "";
            string status = "";

            foreach (ATTMedicalAtt item in objMedAtt)
            {

                if (item.Action == "A")
                {
                    sp = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_ADD_MED_ATTRIBUTE";
                    msg = "Successfully Saved.";
                }
                else
                {
                    sp = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_EDIT_MED_ATTRIBUTE";
                    msg = "Successfully Updated.";
                }

                if (item.Status == true)
                {
                    status = "A";
                }
                else
                {
                    status = "I";
                }

                List<OracleParameter> paramList = new List<OracleParameter>();

                paramList.Add(SqlHelper.GetOraParam(":p_MED_ATTRIBUTE_ID", item.MedAttID, OracleDbType.Int32, ParameterDirection.InputOutput));
                paramList.Add(SqlHelper.GetOraParam(":p_MED_ATTRIBUTE_NAME", item.MedAttName, OracleDbType.Varchar2, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_MED_ATTRIBUTE_NAME_ENG", item.MedAttEngName, OracleDbType.Varchar2, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_STATUS", status, OracleDbType.Varchar2, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_FROM_DATE", item.FromDate, OracleDbType.Varchar2, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_ENTRY_BY", item.EntryBy, OracleDbType.Varchar2, ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_ENTRY_DATE", item.EntryDate, OracleDbType.Date, ParameterDirection.Input));

                GetConnection getConn = new GetConnection();
                OracleConnection dbConn = getConn.GetDbConn();
                OracleTransaction tran = dbConn.BeginTransaction();

                try
                {
                    SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, sp, paramList.ToArray());
                    tran.Commit();
                }
                catch (Exception ex)
                {
                    tran.Rollback();
                    throw new Exception("Error" + ex.Message);
                }
                finally
                {
                   
                    dbConn.Close();
                }

            }

            return msg;
        }

        /// <summary>
        /// Retrives a list of Medical Attribute(s)
        /// </summary>
        /// <param name="MedAttID"></param>
        /// <returns>Medical Attribute or Null if Medical Attribute does not exist</returns>
        ///

        public  List<ATTMedicalAtt> GetMedicalAtt(int? MedAttID)
        {
            string sp = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_GET_MED_ATTRIBUTE";

            List<OracleParameter> paramList = new List<OracleParameter>();

            paramList.Add(SqlHelper.GetOraParam(":p_MED_ATTRIBUTE_ID", MedAttID, OracleDbType.Int32, ParameterDirection.Input));
            paramList.Add(SqlHelper.GetOraParam(":p_rc", null, OracleDbType.RefCursor, ParameterDirection.Output));

            GetConnection getConn = new GetConnection();
            OracleConnection dbconn = getConn.GetDbConn();

            List<ATTMedicalAtt> listMedAtt = new List<ATTMedicalAtt>();

            try
            {
                DataSet ds = SqlHelper.ExecuteDataset(dbconn, CommandType.StoredProcedure, sp, paramList.ToArray());

                foreach (DataRow drow in ((DataTable)ds.Tables[0]).Rows)
                {
                    ATTMedicalAtt objMedAtt = new ATTMedicalAtt();

                    objMedAtt.MedAttID = int.Parse(drow["MA_ID"].ToString());
                    objMedAtt.MedAttName = drow["MA_NAME"].ToString();
                    objMedAtt.MedAttEngName = drow["MA_NAME_ENG"].ToString();
                    if (drow["STATUS"].ToString() == "A")
                    {
                        objMedAtt.Status = true;
                    }
                    else
                    {
                        objMedAtt.Status = false;
                    }
                    objMedAtt.FromDate = drow["FROM_DATE"].ToString();
                    objMedAtt.ToDate = drow["TO_DATE"].ToString();
                    objMedAtt.EntryBy = drow["ENTRY_BY"].ToString();
                    objMedAtt.EntryDate = drow["ENTRY_DATE"].ToString();

                    listMedAtt.Add(objMedAtt);
                }

            }
            catch (Exception ex)
            {
                throw new Exception(" " + ex.Message);
            }
            finally
            {
                dbconn.Close();
            }
            return listMedAtt;
        }


        /// <summary>
        /// This method Delete Medical Attribute
        /// </summary>
        /// <param name="MedAttID">MedAttID to be deleted</param>
        /// <returns>String as a Message about Delete Medical Attribute</returns>
        ///
        public string DelMedicalAtt(int MedAttID)
        {

            GetConnection getConn = new GetConnection();
            OracleConnection conn = getConn.GetDbConn();


            try
            {
                string sp = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_DEL_MED_ATTRIBUTE";
                List<OracleParameter> paramList = new List<OracleParameter>();

                paramList.Add(SqlHelper.GetOraParam(":p_MED_ATTRIBUTE_ID", MedAttID, OracleDbType.Int32, ParameterDirection.InputOutput));
                paramList.Add(SqlHelper.GetOraParam(":P_TO_DATE", null, OracleDbType.Varchar2, ParameterDirection.Input));

                SqlHelper.ExecuteNonQuery(conn, CommandType.StoredProcedure, sp, paramList.ToArray());
                return "Deleted Successfully.";
            }
            catch (Exception ex)
            {

                return ex.Message;
            }
            finally
            {
               
                conn.Close();
            }
        }

        public bool SavePersonMas(List<ATTMedicalAtt> lst, Int64? PID, string entryBy, OracleTransaction tran)
        {
            try
            {
                string sp = "";

                foreach (ATTMedicalAtt obj in lst)
                {

                    if (obj.Action == "E")
                    {
                        sp = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_EDIT_PERSON_MA";

                    }
                    else if (obj.Action == "A")
                    {
                        sp = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_ADD_PERSON_MA";
                    }

                    if (sp != "")
                    {
                        List<OracleParameter> paramList = new List<OracleParameter>();

                        paramList.Add(SqlHelper.GetOraParam(":p_PERSON_ID", PID, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_MED_ATTRIBUTE_ID", obj.MedAttID, OracleDbType.Int16, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_FROM_DATE", obj.FromDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_ENTRY_BY", entryBy, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_ENTRY_DATE", null, OracleDbType.Date, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_R_STATUS", obj.RStatus, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));

                        SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, sp, paramList.ToArray());
                        paramList.Clear();
                    }
                    else
                    {
                        throw new Exception("Error in Saving Person Document !!!");
                    }
                }

                return true;
            }
            catch (Exception ex)
            {
                throw (ex);
            }
        }

        public List<ATTMedicalAtt> GetPersonMas(Int64? ID, Int32? seqNo, OracleConnection conn, bool isDirty = false)
        {
            List<ATTMedicalAtt> lst = new List<ATTMedicalAtt>();

            try
            {
                List<OracleParameter> paramList = new List<OracleParameter>();
                string sp = ConfigurationManager.AppSettings["DatabaseSchema"] + ".CPR_GET_PERSON_MA";

                if (isDirty)
                {
                    sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_GET_PERSON_MA";                    
                }
                

                paramList.Add(SqlHelper.GetOraParam(":p_ID", ID, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_SEQNO", seqNo, OracleDbType.Int32, System.Data.ParameterDirection.Input));
                paramList.Add(SqlHelper.GetOraParam(":P_RC", null, OracleDbType.RefCursor, ParameterDirection.Output));

                DataSet ds = SqlHelper.ExecuteDataset(conn, CommandType.StoredProcedure, sp, paramList.ToArray());

                if (ds.Tables[0].Rows.Count > 0)
                {
                    foreach (DataRow dr in ((DataTable)ds.Tables[0]).Rows)
                    {

                        ATTMedicalAtt obj = new ATTMedicalAtt();

                        obj.MedAttID = int.Parse(dr["MA_ID"].ToString());
                        obj.MedAttName = dr["MA_NAME"].ToString();
                        obj.MedAttEngName = dr["MA_NAME_ENG"].ToString();
                        obj.FromDate = dr["FROM_DATE"].ToString();
                        obj.RStatus = dr["R_STAUS"].ToString();

                        lst.Add(obj);

                    }

                }

                return lst;

            }
            catch (Exception)
            {

                throw;
            }
        }

        #region Dirty

        public bool SaveDirtyPersonMas(List<ATTMedicalAtt> lst, Int64? submissionNo, int seqNo, string entryBy, OracleTransaction tran)
        {
            try
            {
                string sp = "";

                foreach (ATTMedicalAtt obj in lst)
                {

                    if (obj.Action == "E")
                    {
                        sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_EDIT_PERSON_MA";

                    }
                    else if (obj.Action == "A")
                    {
                        sp = ConfigurationManager.AppSettings["DatabaseSchemaDirty"] + ".DCPR_ADD_PERSON_MA";
                    }

                    if (sp != "")
                    {
                        List<OracleParameter> paramList = new List<OracleParameter>();


                        paramList.Add(SqlHelper.GetOraParam(":p_SUBMISSION_NO", submissionNo, OracleDbType.Int64, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_SEQ_NO", seqNo, OracleDbType.Int32, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_MED_ATTRIBUTE_ID", obj.MedAttID, OracleDbType.Int16, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":p_FROM_DATE", obj.FromDate, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_ENTRY_BY", entryBy, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_ENTRY_DATE", null, OracleDbType.Date, System.Data.ParameterDirection.Input));
                        paramList.Add(SqlHelper.GetOraParam(":P_R_STATUS", obj.RStatus, OracleDbType.Varchar2, System.Data.ParameterDirection.Input));

                        SqlHelper.ExecuteNonQuery(tran, CommandType.StoredProcedure, sp, paramList.ToArray());
                        paramList.Clear();
                    }
                    else
                    {
                        throw new Exception("Error in Saving Person Document !!!");
                    }
                }

                return true;
            }
            catch (Exception ex)
            {
                throw (ex);
            }
        }
        #endregion
    }
}
