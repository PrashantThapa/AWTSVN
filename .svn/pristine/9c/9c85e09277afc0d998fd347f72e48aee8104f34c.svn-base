function Department(data) {
    if (data != undefined) {
        var self = this;
        self.DeptID = ko.observable(data.DeptID);
        self.DeptDesc = ko.observable(data.DeptDesc);
        self.OfficeCD = ko.observable(data.OfficeCD);
    }
}

function Sewa(data) {
    if (data != undefined) {
        var self = this;
        self.SewaID = ko.observable(data.SewaID);
        self.SewaName = ko.observable(data.SewaName);
    }
}

function Level(data) {
    if (data != undefined) {
        var self = this;
        self.LevelID = ko.observable(data.LevelID);
        self.LevelDesc = ko.observable(data.LevelDesc);
    }
}

function Samuha(data) {
    if (data != undefined) {
        var self = this;
        self.SamuhaID = ko.observable(data.SamuhaID);
        self.SewaID = ko.observable(data.SewaID);
        self.SamuhaName = ko.observable(data.SamuhaName);
    }
}

function UpaSamuha(data) {
    if (data != undefined) {
        var self = this;
        self.UpaSamuhaID = ko.observable(data.UpaSamuhaID);
        self.UpaSamuhaName = ko.observable(data.UpaSamuhaName);
    }
}

function OfficeSetup(data) {
    var self = this;
    self.OfficeCode = ko.observable(data.OfficeCode);
    self.OfficeNameNep = ko.observable(data.OfficeNameNep);
    self.OfficeNameEng = ko.observable(data.OfficeNameEng);
    self.IRDCode = ko.observable(data.IRDCode);
    self.HouseNo = ko.observable(data.HouseNo);
    self.StreetName = ko.observable(data.StreetName);
    self.WardNo = ko.observable(data.WardNo);
    self.Vdc = ko.observable(data.Vdc);
    self.FaxNo = ko.observable(data.FaxNo);
    self.PhoneNo = ko.observable(data.PhoneNo);
    self.DistrictCode = ko.observable(data.DistrictCode);
    self.Email = ko.observable(data.Email);
    self.Address = ko.observable(data.Address);
    self.OfficeType = ko.observable(data.OfficeType);
    self.ParentOffice = ko.observable(data.ParentOffice);

    self.Action = ko.observable(data.Action);
};

function Post(data) {
    if (data != undefined) {
        var self = this;
        self.PostID = ko.observable(data.PostID);
        self.PostDesc = ko.observable(data.PostDesc);
        self.Status = ko.observable(data.Status);
        self.SewaID = ko.observable(data.Sewa.SewaID);
        self.LevelID = ko.observable(data.Level.LevelID);
        self.Samuha = ko.observable(data.Samuha.SamuhaID);
        self.UpaSamuha = ko.observable(data.UpaSamuha.UpaSamuhaID);
        self.DeptID = ko.observable(data.DeptID);
        self.OfficeCode = ko.observable(data.OfficeCode);
    }
}

var PostModel = function () {
    var self = this;
    self.OfficeCode = ko.observable();
    self.PostID = ko.observable();
    self.PostDesc = ko.observable();
    self.Status = ko.observable();
    self.SewaID = ko.observable();
    self.LevelID = ko.observable();
    self.Samuha = ko.observable();
    self.UpaSamuha = ko.observable();
    self.SewaName = ko.observable();
    self.LevelDesc = ko.observable();
    self.SamuhaName = ko.observable();
    self.UpaSamuhaName = ko.observable();
    self.DeptID = ko.observable();
    self.DeptDesc = ko.observable();
    self.Action = ko.observable();
    self.SaveButtonText = ko.observable("Submit");

    self.OfficeCD = ko.observable();
    self.SelectedDepartment = ko.observable();
    self.SelectedOffice = ko.observable();
    self.SelectedSewa = ko.observable();
    self.SelectedLevel = ko.observable();
    self.SelectedSamuha = ko.observable();
    self.SelectedUpaSamuha = ko.observable();
    self.SelectedParentPost = ko.observable();
    self.SelectedPost = ko.observable();
    self.SaveButtonText = ko.observable('ADD');
    self.Sewas = ko.observableArray([]);
    self.Levels = ko.observableArray([]);
    self.Samuhas = ko.observableArray([]);
    self.AllSamuhas = ko.observableArray([]);
    self.UpaSamuhas = ko.observableArray([]);
    self.ParentPosts = ko.observableArray([]);
    self.Posts = ko.observableArray([]);
    self.Departments = ko.observableArray([]);
    self.Offices = ko.observableArray([]);

    self.SavePost = function () {
        self.SetNepaliValues();
        if (self.ValidatePost()) {
            var postAction = "";
            if (self.SelectedPost() == undefined) {
                postAction = "A";
                self.PostID(null);
            }
            if (self.SelectedPost() != undefined) {
                postAction = "E";
                self.PostID(self.SelectedPost());
            }

            //var Department = { DeptID: self.SelectedDepartment() };
            //var Level = { LevelID: self.SelectedLevel() };
            //var Samuha = { SamuhaID: self.SelectedSamuha() };
            //var UpaSamuha = { UpaSamuhaID: self.SelectedUpaSamuha() };
            //var ParentPost = { PostID: self.SelectedParentPost() };
            //var Office = { OfficeCode: self.SelectedOffice() };
            var post = {
                PostID: self.PostID().PostID,
                PostDesc: self.PostDesc(),
                //Level: Level,
                //Samuha: Samuha,
                //UpaSamuha: UpaSamuha,
                //ParentPost: ParentPost,
                Status: self.Status(),
                FromDate: getDate(),
                ToDate: null,
                DeptID: self.SelectedDepartment(),
                OfficeCode: self.SelectedOffice(),
                EntryBy: $("#user").text(),
                EntryDate: null,
                Action: postAction
            };

            var url = "../../../Handlers/COMMON/PostHandler.ashx";
            var data = { 'method': 'SavePost', 'args': JSON.stringify(ko.toJS(post)) };
            debugger;
            $.post(url, data, function (result) {
                var obj = jQuery.parseJSON(result);
				 msg("Post Saved !!!","SUCCESS");	
                if (obj.Message === "Successfully Saved." || obj.Message === "Successfully Updated.") {
                    self.SaveButtonText('Save');
                    self.ClearControl();
                }
                if (obj.Message === "Successfully Saved." || obj.Message === "Successfully Updated.") {
                    self.GetPost();
                }
                else {
                    self.SelectedPost('');
                }
            });
        }
    };
    self.DeletePost = function () {
        Confirm('Are you sure to Delete?', 'Confirmation Dialog', function (r) {
            console.log(ko.toJS(self.SelectedPost()));
            if (r) {
                waitMsg("Deleting");
                waitMsg.show();
                $.ajax({
                    type: 'GET',
                    dataType: "json",
                    cache: false,
                    url: '../../Handlers/COMMON/PostHandler.ashx',
                    data: { 'method': 'DeletePost', 'post': ko.toJS(self.SelectedPost()).PostID, 'token': $("#token").text() },
                    contentType: "application/json; character=utf-8",
                    success: function (result) {
                        waitMsg.hide();
                        msg(result.Message);

                        if (result.IsSucess) {
                            msg(result.Message);
                            self.GetPost();
                        }
                        else {
                            if (!result.IsToken)
                                msg(result.Message, "WARNING", null, ClearSession);
                            else
                                msg(result.Message, "WARNING");
                        }

                    },
                    error: function (err) {
                        waitMsg.hide();
                        msg(err.status + " - " + err.statusText, "FAILURE");
                    }
                });
            }
        });
    }


    self.GetPostDetails = function () {
        self.ClearControl();
        self.SaveButtonText('Save');
        if (ko.toJS(self.SelectedPost()) != undefined) {
            waitMsg("Loading");
            waitMsg.show();
            self.SaveButtonText('Update');
            var data = ko.toJS(self.SelectedPost());
            if (data !== undefined) {
                self.SelectedOffice(data.OfficeCode);
                self.GetDepartment();
                self.SelectedDepartment(data.DeptID);
                self.PostDesc(data.PostDesc);
                self.Status(data.Status);
            }
      //      $.ajax({
      //          dataType: "json",
      //          cache: false,
      //          url: '../../../Handlers/COMMON/PostHandler.ashx',
      //          data: { 'method': 'GetPost', 'postID': self.SelectedPost() },
      //          contentType: "application/json; charset=utf-8",
      //          success: function (result) {
      //              var response = result.ResponseData[0];
      //              self.PostDesc(response.PostDesc);
      //              self.Status(response.Status);
      //              self.SelectedLevel(response.Level.LevelID);
      //              self.SelectedSewa(response.Sewa.SewaID);
      //              self.Samuhas(self.AllSamuhas().filter(x => x.SewaID() == self.SelectedSewa()));
      //              self.SelectedSamuha(response.Samuha.SamuhaID);
      //              self.GetUpaSamuha();
      //              self.SelectedUpaSamuha(response.UpaSamuha.UpaSamuhaID);
      //              self.SelectedParentPost(response.ParentPost.PostID);
               
      //              self.DeptID(response.DeptID);
      //              self.OfficeCode(response.OfficeCode);
                    
      //              //self.Samuhas(self.AllSamuhas().filter(x => x.SewaID() == self.SelectedSewa()));
      //              //self.SelectedSamuha(response.Samuha.SamuhaID);
      //              //self.GetUpaSamuha();
      //              //self.SelectedUpaSamuha(response.UpaSamuha.UpaSamuhaID);
      //              //self.SelectedParentPost(response.ParentPost.PostID);
      //              waitMsg.hide();
      //          },
      //          error: function (err) {
					 //msg("Oops Error occured while obtaining Posts!!!","WARNING");

      //          }
      //      });
        }
    }



    self.GetPost = function () {
        waitMsg("Loading");
        waitMsg.show();
        $.ajax({
            dataType: "json",
            cache: false,
            async: false,
            url: '../../../Handlers/COMMON/PostHandler.ashx',
            data: { 'method': 'GetPost', 'postID': null },
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                var mappedTask = $.map(result.ResponseData, function (item) {
                    return new Post(item);
                });

                self.Posts(mappedTask);
                waitMsg.hide();
            },
            error: function (err) {
                msg("Oops! Error occured while obtaining Posts!!!","WARNING");

            }
        });
    };

    self.GetOffices = function () {

        $.ajax({
            dataType: "json",
            cache: false,
            url: '../../../Handlers/CENTRALLOOKUP/OfficeHandler.ashx',
            data: { 'method': 'GetAllOffice', 'officeCode': null },
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                var mappedTask = $.map(result.ResponseData, function (item) {
                    return new OfficeSetup(item)
                });

                self.Offices(mappedTask);
            },
            error: function (err) {
                msg(err.status + " - " + err.statusText, "FAILURE");
            }

        });
    } 

    self.GetDepartment = function () {
        waitMsg("Loading");
        waitMsg.show();
        if (ko.toJS(self.SelectedOffice()) !== undefined) {

            $.ajax({
                dataType: "json",
                cache: false,
                async: false,
                url: '../../../Handlers/COMMON/DepartmentHandler.ashx',
                data: {
                    'method': 'GetDepartment', 'officeCode': self.SelectedOffice(), 'deptID': null
                },
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    var mappedTask = $.map(result.ResponseData, function (item) {
                        return new Department(item);
                    });
                    self.Departments(mappedTask);
                    waitMsg.hide();
                },
                error: function (err) {
                    msg("Oops Error occured while obtaining Posts Department!!!", "WARNING");
                }
            });

        }
    };

    self.GetLevel = function () {
        waitMsg("Loading");
        waitMsg.show();
        $.ajax({
            dataType: "json",
            cache: false,
            async: false,
            url: '../../../Handlers/COMMON/LevelHandler.ashx',
            data: { 'method': 'GetLevel', 'levelID': null },
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                var mappedTask = $.map(result.ResponseData, function (item) {
                    return new Level(item);
                });
                self.Levels(mappedTask);
                waitMsg.hide();
            },
            error: function (err) {
                msg("ओहो! पदहरुको लेवेल प्राप्त गर्दा त्रुटिहरू पत्ता लगाइयो !!!", "WARNING");
            }
        });
    };

    self.GetSewa = function () {
        waitMsg("Loading");
        waitMsg.show();
        $.ajax({
            dataType: "json",
            cache: false,
            async: false,
            url: '../../../Handlers/COMMON/SewaHandler.ashx',
            data: { 'method': 'GetSewa', 'sewaID': null },
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                var mappedTask = $.map(result.ResponseData, function (item) {
                    return new Sewa(item);
                });

                self.Sewas(mappedTask);
                waitMsg.hide();
            },
            error: function (err) {
                msg("ओहो! पदहरुको सेवा प्राप्त गर्दा त्रुटिहरू पत्ता लगाइयो !!!", "WARNING");
            }
        });
    };

    self.GetSamuha = function () {
        waitMsg("Loading");
        waitMsg.show();
        $.ajax({
            dataType: "json",
            cache: false,
            async: false,
            url: '../../../Handlers/COMMON/SamuhaHandler.ashx',
            data: { 'method': 'GetSamuha', 'samuhaID': null },
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                var mappedTask = $.map(result.ResponseData, function (item) {
                    return new Samuha(item);
                });
                self.Samuhas(mappedTask);
                self.AllSamuhas(mappedTask);
                waitMsg.hide();
            },
            error: function (err) {
                msg("ओहो! समुहहरु प्राप्त गर्दा त्रुटिहरू पत्ता लगाइयो !!!", "WARNING");
            }
        });
    };

    self.FilterSamuha = function () {
        if (self.SelectedSewa())
            self.Samuhas(self.AllSamuhas().filter(x => x.SewaID() == self.SelectedSewa()));
        else
            self.Samuhas(self.AllSamuhas());
    }

    self.GetUpaSamuha = function () {
        waitMsg("Loading");
        waitMsg.show();
        $.ajax({
            dataType: "json",
            cache: false,
            async: false,
            url: '../../../Handlers/COMMON/UpaSamuhaHandler.ashx',
            data: { 'method': 'GetUpaSamuha', 'samuhaID': self.SelectedSamuha(), 'uppaSamuhaID': null },
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                var mappedTask = $.map(result.ResponseData, function (item) {
                    return new UpaSamuha(item);
                });

                self.UpaSamuhas(mappedTask);
                waitMsg.hide();
            },
            error: function (err) {
                msg("ओहो! उप-समुहहरु प्राप्त गर्दा त्रुटिहरू पत्ता लगाइयो !!!", "WARNING");
            }
        });
    };


    self.ClearPost = function () {
        self.SetNepaliValues();
        self.SelectedPost("");
        self.SaveButtonText('Save');
        self.ClearControl();
    };

    self.ValidatePost = function () {
        var errMsg = "";

        if (Validate.empty(self.PostDesc())) {
            errMsg += "Please fill Post!\n";
        }
        if (Validate.empty(self.Status())) {
            errMsg += "Please fill Status!\n";
        }
        //if (Validate.empty(self.SelectedLevel())) {
        //    errMsg += "कृपया तह छान्नुहोस्!\n";
        //}
        //if (Validate.empty(self.SelectedSewa())) {
        //    errMsg += "कृपया सेवा छान्नुहोस्!\n";
        //}
        //if (Validate.empty(self.SelectedSamuha())) {
        //    errMsg += "कृपया समूह छान्नुहोस्!\n";
        //}
        if (Validate.empty(self.SelectedDepartment())) {
            errMsg += "Please select Department!\n";
        }
        if (errMsg === "") {
            return true;
        }
        else {
             msg(errMsg,"WARNING");
            return false;
        }
    };

    self.ClearControl = function () {
        self.PostDesc("");
        self.Status("");
        self.SelectedLevel("");
        self.SelectedSewa("");
        self.SelectedParentPost("");
        self.SelectedSamuha("");
        self.SelectedUpaSamuha("");
        self.SelectedDepartment("");
    }

    self.SetNepaliValues = function () {
        self.PostDesc($('#txtPostName').val());
    }

    //self.GetLevel();
    //self.GetSewa();
    //self.GetSamuha();
    self.GetDepartment();
    self.GetOffices();
    self.GetPost();
    //self.GetPostDetails();
}

$(document).ready(function () {
    ValidateSession();
    var postModel = new PostModel();
    ko.applyBindings(postModel);
});

